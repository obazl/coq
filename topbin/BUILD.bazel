load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_executable",
    "ocaml_module",
)

package(default_visibility = ["//visibility:public"])

DEPS = []
DEPS_OPAM = []

################################################################

#################
ocaml_executable(
    name = "coqc",
    main = "_Coqc_bin",
    opts = select({
        "//bzl/host:linux": ["-ccopt", "-flto"],
        "//bzl/host:macos": ["-ccopt", "-flto"],
        "//conditions:default": []
    }) + ["-linkall"],
    deps = [
    ]
)

# ocaml_archive(
#     name    = "coqc_bin",
#     shared  = True,
#     standalone = True,
#     modules = [
#         ":_Coqc_bin",
#     ]
# )

#############
ocaml_module(
    ## this just runs "let _ = Coqc.main ()", which is //toplevel:_Coqc
    name    = "_Coqc_bin",
    struct  = "coqc_bin.ml",
    deps = [
        "//toplevel:_Coqc"
    ],
)

################################################################
alias(
    name   = "coqtop",
    actual = "coqtop.opt"
)
#################
ocaml_executable(
    name = "coqtop.opt",
    main = "_Coqtop_bin",
    opts = ["-linkall"],
    # deps = ["//toplevel"]

    # deps_runtime ??? plugins and stdlib
)

#############
ocaml_module(
    name    = "_Coqtop_bin",
    struct  = "coqtop_bin.ml",
    opts = [
        "-linkall",
        "-rectypes"
    ],
    deps = [
        "//tactics:_Autorewrite",
        "//tactics:_Contradiction",
        "//tactics:_Elim",
        "//tactics:_Eqdecide",
        "//tactics:_Inv",
        "//toplevel",
        "//vernac:_Mltop",
        "//vernac:_G_proofs"
    ],
    deps_runtime = [
        "//theories"
        # "//theories/FSets:LibFSets"
    ],
    deps_opam = [ "dynlink" ]
)

#################
## to be compiled with --@ocaml//mode=bytecode
ocaml_executable(
    name = "coqtop.byte",
    main = "_Coqtop_byte_bin",
    # mode = "@ocaml//mode:bytecode",
    opts = ["-linkall"]
)

#############
ocaml_module(
    name    = "_Coqtop_byte_bin",
    struct  = "coqtop_byte_bin.ml",
    opts = [
        "-rectypes",
        "-linkall"
    ],
    deps = [
        "//clib:_Exninfo",
        "//lib:_CErrors",
        "//vernac:_Mltop",
        "//toplevel:_Coqtop"
    ],
    deps_opam = [ "compiler-libs.toplevel", "dynlink" ]
)

#################
ocaml_executable(
    name = "coqproofworker",
    main = "_Coqproofworker_bin",
)

#############
ocaml_module(
    name    = "_Coqproofworker_bin",
    struct  = "coqproofworker_bin.ml",
    opts = [
        "-linkall",
        "-rectypes"
    ],
    deps = [
        # "//dev:_Dynlink",
        "//stm:_Stm",
        "//toplevel:_WorkerLoop",
        "//vernac:_Mltop"
    ],
    deps_opam = [ "dynlink" ]
)

#################
ocaml_executable(
    name = "coqqueryworker",
    main = "_Coqqueryworker_bin",
)

#############
ocaml_module(
    name   = "_Coqqueryworker_bin",
    struct = "coqqueryworker_bin.ml",
    opts = ["-rectypes"],
    deps = [
        "//stm:_Stm",
        "//toplevel:_WorkerLoop"
    ],
)

#################
ocaml_executable(
    name = "coqtacticworker",
    main = "_Coqtacticworker_bin"
)

#############
ocaml_module(
    name    = "_Coqtacticworker_bin",
    struct  = "coqtacticworker_bin.ml",
    opts = ["-rectypes"],
    deps = [
        "//stm:_Partac",
        "//toplevel:_WorkerLoop"
    ],
)


